#+TITLE:A SIMULATED ANNEALING APPROACH TO THE BATTERY ELECTRIC BUS CHARGING PROBLEM
#+startup: beamer
#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [bigger]
#+OPTIONS: H:2
#+date: \today
#+COLUMNS: %40ITEM %10BEAMER_env(Env) %9BEAMER_envargs(Env Args) %4BEAMER_col(Col) %10BEAMER_extra(Extra)
#+BEAMER_HEADER: \AtBeginSection{\frame{\sectionpage}}

# https://orgmode.org/worg/exporters/beamer/tutorial.html

* Introduction
** Problem Description

*** Left
:PROPERTIES:
:BEAMER_col: 0.5
:END:
- total of $n_A$ buses in the fleet
- $n_V$ visits[fn:1] to the station divided between the $n_A$ buses
- Each bus in initialized with a charge of $\alpha_b \kappa_i$

*** Right
:PROPERTIES:
:BEAMER_col: 0.5
:END:
- After each visit the bus goes on its route and discharges by $\Delta_i$
- The charge is not allowed to go below $\nu_b \kappa_i$ during operational hours
- Each bus is required to finish the day with a minimum charge of $\beta_b \kappa_i$[fn:2]

** Mixed Integer Linear Programming

\begin{align*}
\text{max }        &J = \sum_j c_j x_j + \sum_k d_k y_k&         &               \\
\text{subject to } &\sum_j a_{ij} x_j + \sum_k g_{ik} y_k \le b_i&  &(i = 1,2,...,m)\\
                  &x_j \ge 0&                              &(j = 1,2,...,n)\\
                  &y_k \in \mathbb{Z^+}&                   &(k = 1,2,...,n)\\
\end{align*}

- $J$: Objective function
- $x_j \in \mathbb{R}$ and $y_k \in \mathbb{Z}^+$: Decision Variables
- $c_j, d_k, a_{ij}, g_{ik}, b_i \in \mathbb{R}$: Parameters

** The Berth Allocation Problem[fn:3]
\begin{figure}[htpb]
\centering
    \includegraphics[width=0.9\textwidth]{img/berthing-sky-picture}
\end{figure}

** The Berth Allocation Problem
*** Left
:PROPERTIES:
:BEAMER_col: 0.5
:END:
- Vessels move down toward the quay
- Recieve service
- Exit to the right

*** Right
:PROPERTIES:
:BEAMER_col: 0.5
:END:

\begin{figure}[htpb]
\centering
    \includegraphics{img/bap}
    \label{subfig:bapexample}
\end{figure}

** The Berth Allocation Problem
- A variant of the rectangle packing problem
- Solves the problem of optimally assigning incoming vessels to be serviced
  - $\mathbb{O}$: Spatiotemporal allocations for vessels
  - $O$: Time horizon and berthing space


\begin{figure}[htpb]
\centering
    \includegraphics[width=0.5\textwidth]{img/spatiotemporal-packing}
\end{figure}

** The Position Allocation Problem
*** Left
:PROPERTIES:
:BEAMER_col: 0.5
:END:
- Service flow is left to right
- Single charger type
- All arrivals are considered unique
- Service times are assumed to be known

*** Right
:PROPERTIES:
:BEAMER_col: 0.5
:END:

\begin{figure}[htpb]
\centering
    \includegraphics{img/pap}
    \label{subfig:papexample}
\end{figure}

* The Position Allocation Problem Approach With Linear Battery Dynamic
** Requirements for BEB implementation
- Charges must be able to be tracked
- Service time is unknown
- Accommodate chargers of different speeds
- Minimize charger count
- Minimize consumption cost
- Encourage slow charger use for battery health

** Objective Function
\begin{equation*}
\label{eq:objective}
	\min \sum_{i=1}^N \sum_{q=1}^{n_Q} \Big( w_{iq} m_q + g_{iq} \epsilon_q \Big)
\end{equation*}

- $w_{iq} m_q$: Assignment cost
- $g_{iq} \epsilon_q$: Consumption cost

** Packing Constraints
*** Left
:PROPERTIES:
:BEAMER_col: 0.5
:END:

- Used to ensure that individual rectangles do not overlap
- $\sigma_{ij}$ establishes temporal ordering when active
- $\psi_{ij}$ establishes spacial ordering when active

*** Right
:PROPERTIES:
:BEAMER_col: 0.5
:END:

\begin{equation*}
    u_j - u_i - s_i - (\sigma_{ij} - 1)T \geq 0
\end{equation*}
\begin{equation*}
    v_j - v_i - (\psi_{ij} - 1)n_Q \geq 1
\end{equation*}
\begin{equation*}
    \sigma_{ij} + \sigma_{ji} \leq 1
\end{equation*}
\begin{equation*}
    \psi_{ij} + \psi_{ji} \leq 1
\end{equation*}
\begin{equation*}
    \sigma_{ij} + \sigma_{ji} + \psi_{ij} + \psi_{ji} \geq 1
\end{equation*}

** Packing Constraints
*** Left
:PROPERTIES:
:BEAMER_col: 0.5
:END:

- Calculates the charge duration
- Ensures the arrival time is before the initial charge time
- The initial charge time must be early enough as to not go over the time horizon
- The detach time must be before the departure time

*** Right
:PROPERTIES:
:BEAMER_col: 0.5
:END:
\begin{equation*}
    s_i + u_i = d_i
\end{equation*}
\begin{equation*}
    a_i \leq u_i \leq (T - s_i)
\end{equation*}
\begin{equation*}
    d_i \leq \tau_i
\end{equation*}

** Linear Battery Dynamic Constraints
*** Left
:PROPERTIES:
:BEAMER_col: 0.5
:END:
 - Calculates the charge for the next visit
 - Ensures the current charge is above the minimum charge threshold
 - Ensures the current charge is below the battery capacity

*** Right
:PROPERTIES:
:BEAMER_col: 0.5
:END:
\begin{equation*}
    \eta_i + \sum_{q=1}^{n_Q} g_{iq} r_q - \Delta_i = \eta_{\gamma_i}
\end{equation*}
\begin{equation*}
    \eta_i + \sum_{q=1}^{n_Q} g_{iq} r_q - \Delta_i \geq \nu_{\Gamma_i} \kappa_{\Gamma_i}
\end{equation*}
\begin{equation*}
    \eta_i + \sum_{q=1}^{n_Q} g_{iq} r_q \leq \kappa_{\Gamma_i}
\end{equation*}

** Bilinear Linearization Constraints
*** Left
:PROPERTIES:
:BEAMER_col: 0.5
:END:

- Linearization of bilinear terms

#+begin_src latex
\begin{equation*}
    \label{eq:giq_cases}
    g_{iq} =
    \begin{cases}
        s_i & w_{iq} = 1 \\
        0 & w_{iq} = 0
    \end{cases}.
\end{equation*}
#+end_src


*** Right
:PROPERTIES:
:BEAMER_col: 0.5
:END:
\begin{equation*}
    s_i - (1 - w_{iq})M \leq g_{iq}
\end{equation*}
\begin{equation*}
    s_i \geq g_{iq}
\end{equation*}
\begin{equation*}
    Mw_{iq} \geq g_{iq}
\end{equation*}
\begin{equation*}
    0 \leq g_{iq}
\end{equation*}

** Charging Queue Constraints
*** Left
:PROPERTIES:
:BEAMER_col: 0.5
:END:

- Ensure only one queue is selected per visit
- Convert vector representation of queue selection to an integer

*** Right
:PROPERTIES:
:BEAMER_col: 0.5
:END:
\begin{equation*}
    \sum_{q=1}^{n_Q} w_{iq} = 1
\end{equation*}
\begin{equation*}
    v_i = \sum_{q=1}^{n_Q} qw_{iq}
\end{equation*}


** Results
- Executed for 7200 seconds (2 hours)
- $T = 24$
- $n_V = 338$
- $n_A = 35$
-  $\alpha_i = 90\%$;  $\nu_i = 20\%$;  $\beta_i = 70\%$
- $\forall q \in \{n_B + 1, n_B + 2,..., n_B + n_C \}; m_q = 1000q$

** Results
\begin{figure}[htpb]
\centering
    \includegraphics[width=0.6\textwidth]{img/schedule-milp-pap}
\end{figure}
\begin{figure}[htpb]
\centering
    \includegraphics[width=0.6\textwidth]{img/schedule-qin}
\end{figure}

** Results
\begin{figure}[htpb]
\centering
    \includegraphics[width=0.6\textwidth]{img/charger-count-fast-milp-pap}
\end{figure}
\begin{figure}[htpb]
\centering
    \includegraphics[width=0.6\textwidth]{img/charger-count-slow-milp-pap}
\end{figure}

** Results
\begin{figure}[htpb]
\centering
    \includegraphics[width=0.6\textwidth]{img/energy-milp-pap}
\end{figure}
\begin{figure}[htpb]
\centering
    \includegraphics[width=0.6\textwidth]{img/power-milp-pap}
\end{figure}

* The Simulated Annealing Approach With Linear Battery Dynamics
** Simulated Annealing
- Named after its analogized process where a crystalline solid is heated then allowed to cool at a slow rate until it achieves its most regular possible crystal lattice configuration
- The algorithm is often applied to problems that contain many local solutions as it employs a stochastic approach that explores the solution space for an approximate global optimum.
- Within the SA process there are three key components
  - Cooling Schedule
  - Acceptance Criteria
  - Generation Mechanisms
** Cooling Schedule
*** Left
:PROPERTIES:
:BEAMER_col: 0.5
:END:
- The cooling equation models the rate at which the temperature decreases over time in the SA process.
- The temperature is high, SA encourages exploration. As the temperature decreases, exploitation is encouraged.

*** Right
:PROPERTIES:
:BEAMER_col: 0.5
:END:

#+begin_src latex
  \begin{figure}[t!]
    \centering \includegraphics[width=0.9\textwidth]{img/geometric.png}
    \label{fig:geometric}
  \end{figure}

  \begin{equation*}
  t_m = \beta t_{m-1}
  \end{equation*}
#+end_src

** Acceptance Criteria
#+name: eq:candaccept
\begin{equation}
f(\mathbb{I},\bar{\mathbb{I}},t_m) =
\begin{cases}
  1                   & \Delta E > 0 \\
  e^{- \frac{\Delta E}{t_m}} & \text{otherwise}
\end{cases}
\end{equation}

** Generation Mechanisms - Primitive Functions
- New Visit: Move a bus from a wait queue to charge queue
- Slide Visit: Change the charge duration of a visit
- New Charger: Move a visit to a new charger
- Wait: Move a visit to its idle queue
- New Window: Execute Wait then New Visit primitives

** Generation Mechanisms - Wrapper Functions
- Charge Schedule Generation: Iterate through each visit and execute New Visit
- Perturb Schedule: Randomly execute one of the primitives with a weighted distribution

** Objective Function
\begin{equation*}
  J(\mathbb{I}) = z_d p_d + \sum_{i=1}^{n_V} \Big[ \epsilon_{q_i}r_{q_i} + z_p \phi_i(\eta_i - \nu_{b_i} \kappa_{b_i}) + z_c r_{q_i} s_i \Big]
\end{equation*}

*** Left
:PROPERTIES:
:BEAMER_col: 0.5
:END:
- Demand cost
  - $p_{T_p}[h] = \frac{1}{T_p} \sum_{h-\frac{T_p}{dt}+1}^h p_h$
  - $p_d = \max(p_{fix}, p_{max})$
  - $p_{max} = \max\limits_{h \in H}p_{T_p}[h]$

*** Right
:PROPERTIES:
:BEAMER_col: 0.5
:END:
- $\epsilon_{q_i}r_{q_i}$: Assignment Cost
- $z_p \phi_i(\eta_i - \nu_{b_i} \kappa_{b_i})$: Penalty Function
- $z_c r_{q_i} s_i$: Consumption Cost

** Constraints
*** Left
:PROPERTIES:
:BEAMER_col: 0.5
:END:
  \begin{equation*}
      \label{seq:c0}
      u_j - d_i - (\sigma_{ij} - 1)T \ge 0
  \end{equation*}
  \begin{equation*}
      \label{seq:c1}
      q_j - q_i - 1 - (\psi_{ij} - 1)Q \ge 0
  \end{equation*}
  \begin{equation*}
      \label{seq:c2}
      \sigma_{ij} + \sigma_{ji} \le 1
  \end{equation*}
  \begin{equation*}
     \label{seq:c3}
      \psi_{ij} + \psi_{ji} \le 1
  \end{equation*}

*** Right
:PROPERTIES:
:BEAMER_col: 0.5
:END:
  \begin{equation*}
      \label{seq:c4}
      \sigma_{ij} + \sigma_{ji} + \psi_{ij} + \psi_{ji} \ge 1
  \end{equation*}
  \begin{equation*}
      \label{seq:c5}
      s_i = d_i - u_i
  \end{equation*}
  \begin{equation*}
      \label{seq:c6}
       \eta_{\xi_i} = \eta_{i} + r_{q_i}s_i - \Delta_i
  \end{equation*}
  \begin{equation*}
      \label{seq:c7}
      \kappa_{\Xi_i} \geq \eta_{i} + r_{q_i}s_i
  \end{equation*}
  \begin{equation*}
      \label{seq:c8}
      a_i \leq u_i \leq d_i \le e_i \le \mathcal{T}
  \end{equation*}

** Results - What Is In The Thesis
- How long it ran for
- It's sort of working, but not really
** What Happened?
- Score Divergence
- Difficult Schedules are... difficult...
** How To Resolve This Problem?
- Reverse search and weight the visit indices
** Results - What Is Not In The Thesis
- How long it ra for
- Plots! WOW!
* The Simulated Annealing Approach With Non-Linear Battery Dynamics
** Introduction
- Why even consider this?
- Why use SA
** Non-Linear Battery Dynamics Model
- Show function
- Show plots
** Results
- Figures!

* Footnotes

[fn:3] https://www.mdpi.com/2077-1312/11/7/1280
[fn:2] PAP application only
[fn:1]  A visit describes when a bus arrives, assigned a charge queue, and then departs
